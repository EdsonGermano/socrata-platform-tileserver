***
* Refactor request handling for non 200 path.
***

* Split out CoreServiceClient into a general zookeeper client
  (Maybe put it in thirdparty utils, maybe not).
  (thirdparty-utils is kind of a dumping ground.)

* Make the CoreServerClient handle all of the ZooKeeper info,
  including managing the lifetimes of the Curator and Discovery, and
  allocating the Server providers. (Talk to Robert about hooking their
  lifetimes up with the ZookeeperClient.)

* Also make ZookeeperClient allocate a new ExecutionContext.

* Wrap VectorTileEncoder to create TileEncoder that's properly
  functional (takes a list of features, returns a byte array).

* Give the TileEncoder all of the necessary logic to simplify creating
  the debugging txt endpoint output.
  (Also returning the underlying request (including headers?) would be
   useful, but may be rather tricky.)

* Refactor the encoding logic to remove util/package.scala and the
  Encoder type.  Consider returning 404 inside of the service, instead
  of using the framework from SocrataHttp.

* Move various things under test/.../util/ into test/.../util/mocks to
  clean up the directory structure a bit.

* Do another pass over the code looking for missing scaladoc, consider
  opportunities to further reduce technical debt (if there's time left
  before the new year).

* Rename TileServer to something like BootStrap or EntryPoint.
